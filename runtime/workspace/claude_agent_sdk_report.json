{
  "what_is_claude_agent_sdk": "The Claude Agent SDK (formerly Claude Code SDK) is a production-ready framework built on top of the agent harness that powers Claude Code. It provides all the building blocks needed to create custom AI agents with Claude, including context management, a rich tool ecosystem, advanced permissions, and optimized Claude integration. The SDK is designed for building both coding agents (SRE, security review, code review) and business agents (legal assistants, finance advisors, customer support).",

  "core_features": [
    "Automatic Context Management: Automatic compaction and context management to ensure agents don't run out of context, with built-in prompt caching and performance optimizations",
    "Rich Tool Ecosystem: Comprehensive built-in tools for file operations (Read, Write, Edit, Glob, Grep), code execution (Bash), web capabilities (WebFetch, WebSearch), notebook editing, and Model Context Protocol (MCP) extensibility for custom tools",
    "Advanced Permission System: Fine-grained control over agent capabilities with permission modes (default, acceptEdits, bypassPermissions, plan), custom permission functions (canUseTool), and rule-based access control for tools and directories",
    "Session Management: Support for continuing conversations, resuming sessions, forking sessions, and managing conversation lifecycle with hooks for intercepting events (PreToolUse, PostToolUse, UserPromptSubmit, etc.)",
    "Subagents and Extensibility: Launch specialized agents for complex multi-step tasks, define custom subagents programmatically or via filesystem configuration, and integrate with MCP servers for custom tool implementations"
  ],

  "available_tools": [
    "Task: Launch specialized subagents for complex tasks",
    "Bash: Execute shell commands with timeout and background execution support",
    "BashOutput: Retrieve output from background shell processes",
    "KillBash: Terminate background shell processes",
    "Read: Read text files, images, PDFs, and Jupyter notebooks",
    "Write: Write files to the filesystem",
    "Edit: Perform exact string replacements in files",
    "MultiEdit: Make multiple edits to a single file in one operation",
    "Glob: Fast file pattern matching with glob patterns",
    "Grep: Powerful search tool built on ripgrep with regex support",
    "NotebookEdit: Edit Jupyter notebook cells",
    "WebFetch: Fetch and process web content with AI analysis",
    "WebSearch: Search the web and return formatted results",
    "TodoWrite: Create and manage structured task lists",
    "ExitPlanMode: Exit planning mode and get user approval",
    "ListMcpResources: List available MCP resources from connected servers",
    "ReadMcpResource: Read specific MCP resources"
  ],

  "authentication": {
    "primary_method": "API key authentication via the ANTHROPIC_API_KEY environment variable retrieved from the Claude Console",
    "third_party_options": [
      "Amazon Bedrock: Set CLAUDE_CODE_USE_BEDROCK=1 environment variable and configure AWS credentials",
      "Google Vertex AI: Set CLAUDE_CODE_USE_VERTEX=1 environment variable and configure Google Cloud credentials"
    ],
    "important_note": "Third party developers are not allowed to apply Claude.ai rate limits for their products unless previously approved. Must use API key authentication methods."
  },

  "typescript_vs_python": {
    "typescript_advantages": [
      "Single unified query() function that returns a Query interface extending AsyncGenerator with built-in interrupt() and setPermissionMode() methods",
      "More comprehensive type system with detailed TypeScript interfaces for all tool inputs/outputs exported from the SDK",
      "Supports SessionStart, SessionEnd, and Notification hooks in addition to other hook types",
      "Installation via npm: @anthropic-ai/claude-agent-sdk"
    ],
    "python_advantages": [
      "Dual approach: query() function for simple one-off tasks AND ClaudeSDKClient class for continuous conversations with full session control",
      "ClaudeSDKClient provides explicit lifecycle management, interrupt support, hooks, and custom tools - ideal for interactive applications and chat interfaces",
      "Context manager support (async with) for automatic connection management",
      "Clear separation between stateless queries and stateful conversation sessions",
      "Installation via pip: claude-agent-sdk"
    ],
    "key_differences": [
      "Session Management: TypeScript query() creates new session each time but supports resume parameter. Python offers both query() (new session) and ClaudeSDKClient (continuous conversation)",
      "Interrupts: TypeScript supports interrupts via Query.interrupt() in streaming mode. Python only supports interrupts through ClaudeSDKClient class, not query() function",
      "Hooks: TypeScript supports all hook types. Python SDK does not support SessionStart, SessionEnd, and Notification hooks due to setup limitations",
      "Custom Tools: TypeScript uses tool() function to create SdkMcpToolDefinition. Python uses @tool decorator to create SdkMcpTool instances",
      "Type System: TypeScript exports comprehensive type definitions. Python uses dataclasses and TypedDict but types are primarily for documentation",
      "API Style: TypeScript is more functional with options passed to query(). Python provides OOP approach with ClaudeSDKClient class for complex scenarios",
      "Streaming: Both support streaming input (AsyncIterable), but Python's ClaudeSDKClient provides more explicit control with separate query() and receive_messages()/receive_response() methods"
    ]
  },

  "additional_capabilities": {
    "filesystem_configuration": "Supports loading settings from filesystem with settingSources/setting_sources parameter: 'user' (~/.claude/settings.json), 'project' (.claude/settings.json), 'local' (.claude/settings.local.json). By default, SDK loads no filesystem settings for isolation.",
    "claude_md_files": "Can load CLAUDE.md project instructions when setting_sources includes 'project' and system_prompt uses the claude_code preset",
    "permission_modes": [
      "default: Standard permission behavior with user prompts",
      "acceptEdits: Auto-accept file edits without prompting",
      "bypassPermissions: Bypass all permission checks (use with caution)",
      "plan: Planning mode - no actual execution"
    ],
    "mcp_integration": "Full Model Context Protocol support for extending agents with custom tools via stdio, SSE, HTTP, or in-process SDK servers",
    "system_prompts": "Supports custom system prompts or preset claude_code system prompt with optional append for extending instructions"
  },

  "example_use_cases": [
    "Coding agents: SRE agents for diagnosing production issues, security review bots, oncall engineering assistants, code review agents",
    "Business agents: Legal assistants for contract review, finance advisors for report analysis, customer support agents, content creation assistants"
  ],

  "installation": {
    "typescript": "npm install @anthropic-ai/claude-agent-sdk",
    "python": "pip install claude-agent-sdk"
  },

  "reporting_bugs": {
    "typescript": "Report issues on GitHub for TypeScript SDK",
    "python": "Report issues on GitHub for Python SDK"
  },

  "related_resources": [
    "CLI Reference - Complete CLI documentation",
    "GitHub Actions Integration - Automate GitHub workflows",
    "MCP Documentation - Extend Claude with custom tools",
    "Common Workflows - Step-by-step guides",
    "Troubleshooting - Common issues and solutions"
  ]
}
